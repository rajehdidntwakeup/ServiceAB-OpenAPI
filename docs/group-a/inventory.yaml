---
openapi: 3.0.3
info:
  title: Inventory service API
  version: 1.0.0
  description: |
    The **Inventory Service API** manages items in an inventory system.
    It allows clients or other services to create, update,
    retrieve a single item, or retrieve all items.

tags:
  - name: Inventory
    description: Endpoints for managing inventory items.

servers:
  - url: http://localhost:8080/api
    description: Local development server (for testing purposes)

paths:
  /inventory:
    post:
      operationId: createItem
      tags:
        - Inventory
      summary: Save a new item
      description: |
        Creates a new Item in the inventory.
        Requires a `ItemDto` object in the request body.
        Returns the newly saved item.
      requestBody:
        required: true
        description: Item data to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDto'
      responses:
        '201':
          description: Item successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Missing or invalid parameter in the request body
        '500':
          description: Internal server error

    get:
      operationId: getAll
      tags:
        - Inventory
      summary: Get all items
      description: |
        Retrieves a list of all items currently stored in the inventory(s).
        Returns a List of item objects.
      parameters:
        - name: multi-catalog
          in: query
          required: false
          description: |
            Whether to retrieve items from multiple catalogs.
            Defaults to `false`.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successfully returned all items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '500':
          description: Internal server error
  /inventory/{id}:
    get:
      operationId: getItemById
      tags:
        - Inventory
      summary: Get a item by unique identifier (`id`)
      description: |
        Retrieves a single item by its unique identifier (`id`).
        Returns the item object if found.
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the item
          schema:
            type: string
      responses:
        '200':
          description: Item found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Missing or invalid `id` parameter
        '404':
          description: Item with the given `id` was not found
        '500':
          description: Internal server error
    put:
      operationId: updateItemById
      tags:
        - Inventory
      summary: Update an existing item
      description: |
        Updates an existing item in the inventory
        using its unique identifier (`id`).
        Requires both the path parameter and a valid
        `ItemDto` in the request body.
        Returns the updated item.
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier `id` of the item to update
          schema:
            type: string
      requestBody:
        required: true
        description: Updated item data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDto'
      responses:
        '200':
          description: Item successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid request body
        '404':
          description: Item not found with the given `id`
        '500':
          description: Internal server error

components:
  schemas:
    ItemDto:
      type: object
      description: |
        Represents a Item object, without its unique identifier.
      required:
        - name
        - stock
        - price
        - description
      properties:
        name:
          type: string
          description: Title of the Item
          example: "Sunset over the mountains"
        stock:
          type: integer
          description: |
            Number of units available in stock, it must be 0 or greater.
          example: 15
        price:
          type: number
          format: double
          description: Price of the item. It must NOT have a negative value.
          example: 49.99
        description:
          type: string
          description: Detailed description of the item
          example: "A beautiful high-resolution photograph."
    Item:
      type: object
      description: |
        Represents a stored item in the inventory,
        including its unique identifier and full details.
      required:
        - id
        - name
        - stock
        - price
        - description
      properties:
        id:
          type: integer
          description: Unique identifier for the item
          example: 1
        name:
          type: string
          description: Title of the item
          example: "Sunset over the mountains"
        stock:
          type: integer
          description: |
            Number of units available in stock, it must be 0 or greater.
          example: 15
        price:
          type: number
          format: double
          description: |
            Price of the item. It must NOT have a negative value.
          example: 49.99
        description:
          type: string
          description: Detailed description of the item
          example: "A beautiful high-resolution photograph."
