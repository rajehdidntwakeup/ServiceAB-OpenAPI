openapi: 3.0.3
info:
  title: Inventory service API
  version: 1.0.0
  description: |
    The **Inventory Service API** manages pictures in an inventory system.  
    It allows clients or other services to create, update, retrieve a single picture, or retrieve all pictures.  

tags:
  - name: Inventory
    description: Endpoints for managing inventory pictures

servers:
  - url: http://localhost:8080/inventory/api
    description: Local development server (for testing purposes)

paths:
  /save:
    post:
      tags:
        - Inventory
      summary: Save a new picture
      description: |
        Creates a new picture in the inventory.  
        Requires a `Picture` object in the request body with a unique `EAN`.  
        Returns the newly saved picture.
      requestBody:
        required: true
        description: Picture data to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Picture'
      responses:
        '200':
          description: Picture successfully saved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Picture'
        '400':
          description: Missing or invalid parameter in the request body, or already saved `EAN`
        '500':
          description: Internal server error

  /{ean}:
    get:
      tags:
        - Inventory
      summary: Get a picture by unique identifier (EAN)
      description: |
        Retrieves a single picture by its unique identifier (`EAN`).  
        Returns the picture object if found.
      parameters:
        - name: ean
          in: path
          required: true
          description: The unique identifier `EAN` of the picture
          schema:
            type: string
      responses:
        '200':
          description: Picture found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Picture'
        '400':
          description: Missing or invalid `EAN` parameter
        '404':
          description: Picture with the given `EAN` was not found
        '500':
          description: Internal server error

  /all:
    get:
      tags:
        - Inventory
      summary: Get all pictures
      description: |
        Retrieves a list of all pictures currently stored in the inventory.  
        Returns a List of picture objects.
      responses:
        '200':
          description: Successfully returned all pictures
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Picture'
        '500':
          description: Internal server error

  /update/{ean}:
    put:
      tags:
        - Inventory
      summary: Update an existing picture
      description: |
        Updates an existing picture in the inventory using its unique identifier (`EAN`).  
        Requires both the path parameter and a valid `Picture` in the request body.  
        Returns the updated picture.
      parameters:
        - name: ean
          in: path
          required: true
          description: The unique identifier `EAN` of the picture to update
          schema:
            type: string
      requestBody:
        required: true
        description: Updated picture data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Picture'
      responses:
        '200':
          description: Picture successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Picture'
        '400':
          description: Missing or invalid `EAN` parameter, or already saved `EAN`, or invalid body request
        '404':
          description: Picture not found with the given `EAN`
        '500':
          description: Internal server error

components:
  schemas:
    Picture:
      type: object
      description: |
        Represents a stored picture in the inventory, including its unique identifier and full details.
      required:
        - ean
        - title
        - size
        - stock
        - price
        - description
      properties:
        ean:
          type: string
          description: Unique identifier for the picture (`EAN` code)
          example: "1234567890123"
        title:
          type: string
          description: Title of the picture
          example: "Sunset over the mountains"
        size:
          type: string
          description: Size of the picture (e.g., dimensions, file size, or format)
          example: "1920x1080"
        stock:
          type: integer
          description: Number of units available in stock, it must be 0 or greater.
          example: 15
        price:
          type: number
          format: double
          description: Price of the picture. It must NOT have a negative value.
          example: 49.99
        description:
          type: string
          description: Detailed description of the picture
          example: "A beautiful high-resolution photograph of a sunset over the mountain range."

